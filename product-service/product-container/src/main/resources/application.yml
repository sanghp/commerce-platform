server:
  port: 8182

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      show-values: ALWAYS
    health:
      show-details: always
  tracing:
    sampling:
      probability: 0.1  # 10% sampling rate
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces

logging:
  level:
    root: error
#    root: info
#    io.micrometer.tracing: DEBUG
#    io.opentelemetry: INFO
#    io.micrometer.observation: DEBUG
#    org.hibernate.SQL: off
#    org.hibernate.type.descriptor.sql: off
#    com.zaxxer.hikari: error
#    org.apache.coyote.http11: off

product-service:
  product-reservation-request-topic-name: product-reservation-request
  product-reservation-response-topic-name: product-reservation-response
  outbox-scheduler-fixed-rate: 10
  outbox-scheduler-initial-delay: 100
  outbox-scheduler-batch-size: 50
  outbox-processing-timeout-minutes: 5
  outbox-cleaner-cron: "@midnight"
  outbox-cleaner-batch-size: 100
  inbox-scheduler-fixed-rate: 100
  inbox-retry-scheduler-fixed-rate: 5000
  inbox-max-retry-count: 3
  inbox-batch-size: 50

spring:
  application:
    name: product-service
  otel:
    resource:
      attributes:
        service.name: product-service
        service.version: 1.0.0
    exporter:
      otlp:
        endpoint: http://localhost:4318
    traces:
      sampler:
        probability: 0.1  # 10% sampling
  main:
    banner-mode: off
  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        default_schema: product
        dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    url: jdbc:mysql://localhost:13306/product?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-test-query: SELECT 1
      pool-name: ProductServiceHikariPool
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0

kafka-config:
  bootstrap-servers: ${KAFKA_CONFIG_BOOTSTRAP_SERVERS:localhost:19092, localhost:19093, localhost:19094}
  schema-registry-url-key: schema.registry.url
  schema-registry-url: ${KAFKA_CONFIG_SCHEMA_REGISTRY_URL:http://localhost:18081}

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.UUIDSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  acks: 1
  batch-size: 32768
  linger-ms: 10
  compression-type: lz4
  request-timeout-ms: 30000
  retry-count: 3
  metadata-max-age-ms: 300000
  schema-registry-cache-size: 100
  auto-register-schemas: false

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  product-reservation-consumer-group-id: product-reservation-topic-consumer
  customer-group-id: customer-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: false
  auto-startup: true
  enable-auto-commit: false
  concurrency-level: 10
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150

---
spring:
  config:
    activate:
      on-profile: docker
  flyway:
    enabled: false
  datasource:
    url: jdbc:mysql://mysql:3306/product?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true

kafka-config:
  bootstrap-servers: kafka-broker-1:29092, kafka-broker-2:29093, kafka-broker-3:29094
  schema-registry-url: http://schema-registry:8081